[{"D:\\Github\\mobx\\multiple-mobx\\src\\index.tsx":"1","D:\\Github\\mobx\\multiple-mobx\\src\\reportWebVitals.ts":"2","D:\\Github\\mobx\\multiple-mobx\\src\\App.tsx":"3","D:\\Github\\mobx\\multiple-mobx\\src\\components\\note\\index.tsx":"4","D:\\Github\\mobx\\multiple-mobx\\src\\components\\user\\index.tsx":"5","D:\\Github\\mobx\\multiple-mobx\\src\\components\\todo\\index.tsx":"6","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\index.tsx":"7","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\animalStore.ts":"8","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\noteStore.ts":"9","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\userStore.ts":"10","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\todoStore.tsx":"11"},{"size":554,"mtime":1654095943322,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1654095943175,"results":"14","hashOfConfig":"13"},{"size":303,"mtime":1654181885013,"results":"15","hashOfConfig":"13"},{"size":1150,"mtime":1654181788912,"results":"16","hashOfConfig":"13"},{"size":1171,"mtime":1654181788912,"results":"17","hashOfConfig":"13"},{"size":2310,"mtime":1654179568194,"results":"18","hashOfConfig":"13"},{"size":770,"mtime":1654181946206,"results":"19","hashOfConfig":"13"},{"size":1075,"mtime":1654181788912,"results":"20","hashOfConfig":"13"},{"size":531,"mtime":1654181788912,"results":"21","hashOfConfig":"13"},{"size":443,"mtime":1654181788913,"results":"22","hashOfConfig":"13"},{"size":1595,"mtime":1654179524872,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14v7u6e",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\mobx\\multiple-mobx\\src\\index.tsx",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\reportWebVitals.ts",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\App.tsx",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\components\\note\\index.tsx",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\components\\user\\index.tsx",["59"],[],"import { autorun, trace } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useContext } from \"react\";\r\nimport { StoresContext } from '../../stores';\r\n\r\nconst UserCPN = () => {\r\n    // let message = { author: 'abc', age: 10 }\r\n\r\n    // const twitterUrls = observable.object({\r\n    //     Joe: \"twitter.com/joey\"\r\n    // })\r\n\r\n    // autorun(() => {\r\n    //     console.log(get(twitterUrls, \"Sara\")) // `get` can track not yet existing properties.\r\n    // })\r\n    // //first\r\n    // runInAction(() => {\r\n    //     set(twitterUrls, { Sara: \"twitter.com/horsejs\" })\r\n    // })\r\n\r\n    autorun((ele) => {\r\n        trace() \r\n        console.log(ele)\r\n    })\r\n \r\n    const useStores = () => useContext(StoresContext);\r\n    const { noteStore, userStore } = useStores();\r\n\r\n    const handleNameChange = (e: any) => {\r\n        e.preventDefault();\r\n        const { value } = e.target;\r\n\r\n        userStore.setUserName(value);\r\n    };\r\n\r\n    return <>\r\n        <h1>hello {userStore.name}</h1>\r\n        <h2>Change your name here</h2>\r\n        <input type=\"text\" value={userStore.name} onChange={handleNameChange} />\r\n    </>\r\n};\r\n\r\nexport default observer(UserCPN);","D:\\Github\\mobx\\multiple-mobx\\src\\components\\todo\\index.tsx",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\stores\\index.tsx",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\stores\\animalStore.ts",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\stores\\noteStore.ts",["60"],[],"import { RootStore } from './index';\r\n\r\nimport { action, makeAutoObservable, observable } from \"mobx\";\r\n\r\ninterface INote {\r\n    note: string;\r\n    username : string;    \r\n}\r\n\r\nclass noteStore {\r\n    notes: INote[] = [];\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    @action addNote(note: string , username : string) {\r\n        let a = {note , username}\r\n        this.notes.push(a);\r\n    }\r\n}\r\n\r\nexport default noteStore;\r\n","D:\\Github\\mobx\\multiple-mobx\\src\\stores\\userStore.ts",[],[],"D:\\Github\\mobx\\multiple-mobx\\src\\stores\\todoStore.tsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":27,"column":13,"nodeType":"63","messageId":"64","endLine":27,"endColumn":22},{"ruleId":"61","severity":1,"message":"65","line":3,"column":38,"nodeType":"63","messageId":"64","endLine":3,"endColumn":48},"@typescript-eslint/no-unused-vars","'noteStore' is assigned a value but never used.","Identifier","unusedVar","'observable' is defined but never used."]