{"ast":null,"code":"import { makeAutoObservable, reaction, when } from \"mobx\";\nexport default class AnimalStore {\n  constructor(name) {\n    this.name = void 0;\n    this.energyLevel = void 0;\n    this.name = name;\n    this.energyLevel = 100;\n    makeAutoObservable(this, {\n      dispose: false\n    });\n    when(() => !this.isVisible, // ... then.\n    () => this.dispose());\n  }\n\n  reduceEnergy() {\n    this.energyLevel -= 10;\n  }\n\n  get isHungry() {\n    return this.energyLevel < 50;\n  }\n\n  get a() {\n    return this.energyLevel < 100;\n  }\n\n}\nconst giraffe = new AnimalStore(\"Gary\");\nreaction(() => giraffe.a, isHungry => {\n  console.log(isHungry);\n\n  if (isHungry) {\n    console.log(\"Now I'm hungry!\");\n  } else {\n    console.log(\"I'm not hungry!\");\n  }\n\n  console.log(\"Energy level:\", giraffe.energyLevel);\n});\n\nfor (let i = 0; i < 10; i++) {\n  giraffe.reduceEnergy();\n}","map":{"version":3,"names":["makeAutoObservable","reaction","when","AnimalStore","constructor","name","energyLevel","dispose","isVisible","reduceEnergy","isHungry","a","giraffe","console","log","i"],"sources":["C:/project/New folder/mobx/multiple-mobx/src/stores/animalStore.ts"],"sourcesContent":["import { makeAutoObservable, reaction, when } from \"mobx\"\r\nimport { useContext } from \"react\"\r\nimport { RootStore, StoresContext } from \".\"\r\n\r\nexport default class AnimalStore {\r\n    name\r\n    energyLevel\r\n    constructor(name: string) {\r\n        this.name = name\r\n        this.energyLevel = 100\r\n        makeAutoObservable(this,{ dispose: false })\r\n        when(\r\n            () => !this.isVisible,\r\n            // ... then.\r\n            () => this.dispose()\r\n        )\r\n    }\r\n\r\n    reduceEnergy() {\r\n        this.energyLevel -= 10\r\n    }\r\n\r\n    get isHungry() {\r\n        return this.energyLevel < 50\r\n    }\r\n    get a() {\r\n        return this.energyLevel < 100;\r\n    }\r\n}\r\n\r\nconst giraffe = new AnimalStore(\"Gary\")\r\n\r\nreaction(() => giraffe.a, isHungry => {\r\n    console.log(isHungry);\r\n    if (isHungry) {\r\n        console.log(\"Now I'm hungry!\")\r\n    } else {\r\n        console.log(\"I'm not hungry!\")\r\n    }\r\n    console.log(\"Energy level:\", giraffe.energyLevel)\r\n}\r\n)\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n    giraffe.reduceEnergy()\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,QAA7B,EAAuCC,IAAvC,QAAmD,MAAnD;AAIA,eAAe,MAAMC,WAAN,CAAkB;EAG7BC,WAAW,CAACC,IAAD,EAAe;IAAA,KAF1BA,IAE0B;IAAA,KAD1BC,WAC0B;IACtB,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,WAAL,GAAmB,GAAnB;IACAN,kBAAkB,CAAC,IAAD,EAAM;MAAEO,OAAO,EAAE;IAAX,CAAN,CAAlB;IACAL,IAAI,CACA,MAAM,CAAC,KAAKM,SADZ,EAEA;IACA,MAAM,KAAKD,OAAL,EAHN,CAAJ;EAKH;;EAEDE,YAAY,GAAG;IACX,KAAKH,WAAL,IAAoB,EAApB;EACH;;EAEW,IAARI,QAAQ,GAAG;IACX,OAAO,KAAKJ,WAAL,GAAmB,EAA1B;EACH;;EACI,IAADK,CAAC,GAAG;IACJ,OAAO,KAAKL,WAAL,GAAmB,GAA1B;EACH;;AAvB4B;AA0BjC,MAAMM,OAAO,GAAG,IAAIT,WAAJ,CAAgB,MAAhB,CAAhB;AAEAF,QAAQ,CAAC,MAAMW,OAAO,CAACD,CAAf,EAAkBD,QAAQ,IAAI;EAClCG,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;EACA,IAAIA,QAAJ,EAAc;IACVG,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACH,CAFD,MAEO;IACHD,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACH;;EACDD,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAAO,CAACN,WAArC;AACH,CARO,CAAR;;AAWA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;EACzBH,OAAO,CAACH,YAAR;AACH"},"metadata":{},"sourceType":"module"}