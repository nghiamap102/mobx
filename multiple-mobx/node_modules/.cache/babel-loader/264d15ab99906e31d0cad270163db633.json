{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\mobx\\\\multiple-mobx\\\\src\\\\components\\\\map\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport \"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Map.css\";\nimport Tooltip from './../tooltip/index';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoresContext } from \"../../stores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA\";\n\nconst Map = () => {\n  _s();\n\n  const useStores = useContext(RootStoresContext).mapStore;\n  const tooltipRef = useRef(new mapboxgl.Popup({\n    offset: 15\n  }));\n  const mapContainer = useRef(null);\n  const [long, setLong] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/outdoors-v11\",\n      center: [long, lat],\n      zoom: zoom\n    });\n\n    const coordinatesGeocoder = function (query) {\n      // Match anything which looks like\n      // decimal degrees coordinate pair.\n      const matches = query.match(/^[ ]*(?:Lat: )?(-?\\d+\\.?\\d*)[, ]+(?:Lng: )?(-?\\d+\\.?\\d*)[ ]*$/i);\n\n      if (!matches) {\n        return null;\n      }\n\n      function coordinateFeature(lng, lat) {\n        return {\n          center: [lng, lat],\n          geometry: {\n            type: \"Point\",\n            coordinates: [lng, lat]\n          },\n          place_name: \"Lat: \" + lat + \" Lng: \" + lng,\n          place_type: [\"coordinate\"],\n          properties: {},\n          type: \"Feature\"\n        };\n      }\n\n      const coord1 = Number(matches[1]);\n      const coord2 = Number(matches[2]);\n      const geocodes = [];\n\n      if (coord1 < -90 || coord1 > 90) {\n        // must be lng, lat\n        geocodes.push(coordinateFeature(coord1, coord2));\n      }\n\n      if (coord2 < -90 || coord2 > 90) {\n        // must be lat, lng\n        geocodes.push(coordinateFeature(coord2, coord1));\n      }\n\n      if (geocodes.length === 0) {\n        // else could be either lng, lat or lat, lng\n        geocodes.push(coordinateFeature(coord1, coord2));\n        geocodes.push(coordinateFeature(coord2, coord1));\n      }\n\n      return geocodes;\n    }; // Add the control to the map.\n\n\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      localGeocoder: coordinatesGeocoder,\n      zoom: 10,\n      placeholder: \"Try: -40, 170\",\n      reverseGeocode: true\n    }));\n    map.on(\"load\", () => {\n      //line\n      //contour default min zoom 9\n      map.addLayer({\n        id: \"biengioi\",\n        type: \"line\",\n        source: {\n          type: \"vector\",\n          url: \"mapbox://mapbox.mapbox-terrain-v2\"\n        },\n        \"source-layer\": \"contour\"\n      }); //add source\n\n      map.addSource(\"points\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: [{\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: [long, lat]\n            }\n          }, {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: [-long, -lat]\n            }\n          }, {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: [-91.3403, 0.0164]\n            }\n          }]\n        }\n      });\n      map.addLayer({\n        metadata: {\n          id: \"marker\"\n        },\n        id: \"circle\",\n        type: \"circle\",\n        source: \"points\",\n        paint: {\n          \"circle-color\": \"#4264fb\",\n          \"circle-radius\": 8,\n          \"circle-stroke-width\": 2,\n          \"circle-stroke-color\": \"#ffffff\"\n        }\n      });\n    });\n    map.on(\"click\", function (e) {\n      useStores.arrMarker.map(ele => ele.remove(map));\n      const a = new mapboxgl.Marker(e).setLngLat(e.lngLat);\n      a.addTo(map);\n      useStores.arrMarker.push(a); // var feature = features[0];\n      // console.log(feature);\n      // new mapboxgl.Popup({ offset: [0, -15] })\n      //   .setLngLat(feature.geometry.coordinates)\n      //   .setHTML(\"<h3>\" + feature.properties.title + \"abc\" + \"</h3>\")\n      //   .addTo(map);\n    });\n    map.on(\"click\", \"circle\", e => {\n      map.flyTo({\n        center: e.features[0].geometry.coordinates\n      });\n    });\n    map.on(\"mouseenter\", \"circle\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    });\n    map.on(\"mouseleave\", \"circle\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n    map.on(\"mousemove\", e => {\n      const features = map.queryRenderedFeatures(e.point);\n\n      if (features.length) {\n        const feature = features[0];\n        const tooltipNode = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Tooltip, {\n          feature: feature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }, this), tooltipNode);\n        tooltipRef.current.setLngLat(e.lngLat).setDOMContent(tooltipNode).addTo(map);\n      }\n    }); ///set sidebar\n\n    map.on(\"move\", () => {\n      setLong(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"qCcODx59bV7S0InT/+HsCxhvP4c=\");\n\n_c = Map;\nexport default _c2 = observer(Map);\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-77.032, 38.913]\n    },\n    properties: {\n      title: \"Mapbox\",\n      description: \"Washington, D.C.\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-122.414, 37.776]\n    },\n    properties: {\n      title: \"Mapbox\",\n      description: \"San Francisco, California\"\n    }\n  }]\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["MapboxGeocoder","mapboxgl","useContext","useEffect","useRef","useState","ReactDOM","Tooltip","observer","RootStoresContext","accessToken","Map","useStores","mapStore","tooltipRef","Popup","offset","mapContainer","long","setLong","lat","setLat","zoom","setZoom","map","container","current","style","center","coordinatesGeocoder","query","matches","match","coordinateFeature","lng","geometry","type","coordinates","place_name","place_type","properties","coord1","Number","coord2","geocodes","push","length","addControl","localGeocoder","placeholder","reverseGeocode","on","addLayer","id","source","url","addSource","data","features","metadata","paint","e","arrMarker","ele","remove","a","Marker","setLngLat","lngLat","addTo","flyTo","getCanvas","cursor","queryRenderedFeatures","point","feature","tooltipNode","document","createElement","render","setDOMContent","getCenter","toFixed","getZoom","geojson","title","description"],"sources":["D:/Github/mobx/multiple-mobx/src/components/map/index.tsx"],"sourcesContent":["import MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\r\nimport \"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Map.css\";\r\nimport Tooltip from './../tooltip/index';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoresContext } from \"../../stores\";\r\n\r\nmapboxgl.accessToken =\r\n    \"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA\";\r\n\r\nconst Map = () => {\r\n\r\n    const useStores = useContext(RootStoresContext).mapStore\r\n\r\n\r\n    const tooltipRef = useRef(new mapboxgl.Popup({ offset: 15 }));\r\n    const mapContainer = useRef<any>(null);\r\n    const [long, setLong] = useState(-70.9);\r\n    const [lat, setLat] = useState(42.35);\r\n    const [zoom, setZoom] = useState(9);\r\n\r\n    useEffect(() => {\r\n        const map: any = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: \"mapbox://styles/mapbox/outdoors-v11\",\r\n            center: [long, lat],\r\n            zoom: zoom,\r\n        });\r\n\r\n        const coordinatesGeocoder: any = function (query: any) {\r\n            // Match anything which looks like\r\n            // decimal degrees coordinate pair.\r\n            const matches = query.match(\r\n                /^[ ]*(?:Lat: )?(-?\\d+\\.?\\d*)[, ]+(?:Lng: )?(-?\\d+\\.?\\d*)[ ]*$/i\r\n            );\r\n            if (!matches) {\r\n                return null;\r\n            }\r\n\r\n            function coordinateFeature(lng: any, lat: any) {\r\n                return {\r\n                    center: [lng, lat],\r\n                    geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [lng, lat],\r\n                    },\r\n                    place_name: \"Lat: \" + lat + \" Lng: \" + lng,\r\n                    place_type: [\"coordinate\"],\r\n                    properties: {},\r\n                    type: \"Feature\",\r\n                };\r\n            }\r\n\r\n            const coord1 = Number(matches[1]);\r\n            const coord2 = Number(matches[2]);\r\n            const geocodes = [];\r\n\r\n            if (coord1 < -90 || coord1 > 90) {\r\n                // must be lng, lat\r\n                geocodes.push(coordinateFeature(coord1, coord2));\r\n            }\r\n\r\n            if (coord2 < -90 || coord2 > 90) {\r\n                // must be lat, lng\r\n                geocodes.push(coordinateFeature(coord2, coord1));\r\n            }\r\n\r\n            if (geocodes.length === 0) {\r\n                // else could be either lng, lat or lat, lng\r\n                geocodes.push(coordinateFeature(coord1, coord2));\r\n                geocodes.push(coordinateFeature(coord2, coord1));\r\n            }\r\n\r\n            return geocodes;\r\n        };\r\n\r\n        // Add the control to the map.\r\n        map.addControl(\r\n            new MapboxGeocoder({\r\n                accessToken: mapboxgl.accessToken,\r\n                localGeocoder: coordinatesGeocoder,\r\n                zoom: 10,\r\n                placeholder: \"Try: -40, 170\",\r\n                reverseGeocode: true,\r\n            })\r\n        );\r\n\r\n        map.on(\"load\", () => {\r\n            //line\r\n            //contour default min zoom 9\r\n            map.addLayer({\r\n                id: \"biengioi\",\r\n                type: \"line\",\r\n                source: {\r\n                    type: \"vector\",\r\n                    url: \"mapbox://mapbox.mapbox-terrain-v2\",\r\n                },\r\n                \"source-layer\": \"contour\",\r\n            });\r\n            //add source\r\n            map.addSource(\"points\", {\r\n                type: \"geojson\",\r\n                data: {\r\n                    type: \"FeatureCollection\",\r\n                    features: [\r\n                        {\r\n                            type: \"Feature\",\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: [long, lat],\r\n                            },\r\n                        },\r\n                        {\r\n                            type: \"Feature\",\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: [-long, -lat],\r\n                            },\r\n                        },\r\n                        {\r\n                            type: \"Feature\",\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: \"Point\",\r\n                                coordinates: [-91.3403, 0.0164],\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            });\r\n\r\n            map.addLayer({\r\n                metadata: {\r\n                    id: \"marker\",\r\n                },\r\n                id: \"circle\",\r\n                type: \"circle\",\r\n                source: \"points\",\r\n                paint: {\r\n                    \"circle-color\": \"#4264fb\",\r\n                    \"circle-radius\": 8,\r\n                    \"circle-stroke-width\": 2,\r\n                    \"circle-stroke-color\": \"#ffffff\",\r\n                },\r\n            });\r\n        });\r\n        map.on(\"click\", function (e: any) {\r\n            useStores.arrMarker.map((ele: any) => ele.remove(map));\r\n            const a: any = new mapboxgl.Marker(e).setLngLat(e.lngLat);\r\n            a.addTo(map);\r\n            useStores.arrMarker.push(a);\r\n            // var feature = features[0];\r\n            // console.log(feature);\r\n            // new mapboxgl.Popup({ offset: [0, -15] })\r\n            //   .setLngLat(feature.geometry.coordinates)\r\n            //   .setHTML(\"<h3>\" + feature.properties.title + \"abc\" + \"</h3>\")\r\n            //   .addTo(map);\r\n        });\r\n\r\n        map.on(\"click\", \"circle\", (e: any) => {\r\n            map.flyTo({\r\n                center: e.features[0].geometry.coordinates,\r\n            });\r\n        });\r\n\r\n        map.on(\"mouseenter\", \"circle\", () => {\r\n            map.getCanvas().style.cursor = \"pointer\";\r\n        });\r\n\r\n        map.on(\"mouseleave\", \"circle\", () => {\r\n            map.getCanvas().style.cursor = \"\";\r\n        });\r\n\r\n        map.on(\"mousemove\", (e: any) => {\r\n            const features = map.queryRenderedFeatures(e.point);\r\n            if (features.length) {\r\n                const feature = features[0];\r\n\r\n                const tooltipNode = document.createElement(\"div\");\r\n                ReactDOM.render(<Tooltip feature={feature} />, tooltipNode);\r\n\r\n                tooltipRef.current\r\n                    .setLngLat(e.lngLat)\r\n                    .setDOMContent(tooltipNode)\r\n                    .addTo(map);\r\n            }\r\n        });\r\n        ///set sidebar\r\n        map.on(\"move\", () => {\r\n            setLong(map.getCenter().lng.toFixed(4));\r\n            setLat(map.getCenter().lat.toFixed(4));\r\n            setZoom(map.getZoom().toFixed(2));\r\n        });\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className=\"sidebar\">\r\n                Longitude: {long} | Latitude: {lat} | Zoom: {zoom}\r\n            </div> */}\r\n            <div className=\"sidebar\">\r\n\r\n            </div>\r\n            <div className=\"map-container\" ref={mapContainer} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(Map);\r\n\r\nconst geojson = {\r\n    type: \"FeatureCollection\",\r\n    features: [\r\n        {\r\n            type: \"Feature\",\r\n            geometry: {\r\n                type: \"Point\",\r\n                coordinates: [-77.032, 38.913],\r\n            },\r\n            properties: {\r\n                title: \"Mapbox\",\r\n                description: \"Washington, D.C.\",\r\n            },\r\n        },\r\n        {\r\n            type: \"Feature\",\r\n            geometry: {\r\n                type: \"Point\",\r\n                coordinates: [-122.414, 37.776],\r\n            },\r\n            properties: {\r\n                title: \"Mapbox\",\r\n                description: \"San Francisco, California\",\r\n            },\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}