{"ast":null,"code":"import _initializerDefineProperty from \"C:/project/New folder/mobx/multiple-mobx/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"C:/project/New folder/mobx/multiple-mobx/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"C:/project/New folder/mobx/multiple-mobx/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _class, _descriptor, _descriptor2;\n\n// src/stores/user.store.js\nimport { get, makeAutoObservable, observable } from \"mobx\";\nlet userStore = (_class = class userStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"rootStore\", _descriptor2, this);\n\n    this.setUserName = name => {\n      this.name = name;\n    };\n\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n\n  getUsername() {\n    return this.name;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"name\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"Example-React\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"rootStore\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"getUsername\", [get], Object.getOwnPropertyDescriptor(_class.prototype, \"getUsername\"), _class.prototype)), _class);\nexport default userStore;","map":{"version":3,"names":["get","makeAutoObservable","observable","userStore","constructor","rootStore","setUserName","name","getUsername"],"sources":["C:/project/New folder/mobx/multiple-mobx/src/stores/userStore.ts"],"sourcesContent":["// src/stores/user.store.js\r\n\r\nimport { get, makeAutoObservable, observable } from \"mobx\";\r\nimport { RootStore } from \".\";\r\n\r\nclass userStore {\r\n    @observable name = \"Example-React\";\r\n    @observable rootStore : RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUserName = (name: string) => {\r\n        this.name = name;\r\n    };\r\n    \r\n    @get getUsername(){\r\n        return this.name\r\n    } \r\n}\r\n\r\nexport default userStore;\r\n"],"mappings":";;;;;;AAAA;AAEA,SAASA,GAAT,EAAcC,kBAAd,EAAkCC,UAAlC,QAAoD,MAApD;IAGMC,S,aAAN,MAAMA,SAAN,CAAgB;EAGZC,WAAW,CAACC,SAAD,EAAuB;IAAA;;IAAA;;IAAA,KAKlCC,WALkC,GAKnBC,IAAD,IAAkB;MAC5B,KAAKA,IAAL,GAAYA,IAAZ;IACH,CAPiC;;IAC9B,KAAKF,SAAL,GAAiBA,SAAjB;IACAJ,kBAAkB,CAAC,IAAD,CAAlB;EACH;;EAMIO,WAAW,GAAE;IACd,OAAO,KAAKD,IAAZ;EACH;;AAdW,C,sEACXL,U;;;;;WAAkB,e;;6EAClBA,U;;;;;gEAUAF,G;AAKL,eAAeG,SAAf"},"metadata":{},"sourceType":"module"}