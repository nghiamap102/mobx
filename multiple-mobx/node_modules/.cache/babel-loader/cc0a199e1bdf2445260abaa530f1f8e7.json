{"ast":null,"code":"'use strict';\n\nvar Typeahead = require('suggestions');\n\nvar debounce = require('lodash.debounce');\n\nvar extend = require('xtend');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar exceptions = require('./exceptions');\n\nvar MapboxClient = require('@mapbox/mapbox-sdk');\n\nvar mbxGeocoder = require('@mapbox/mapbox-sdk/services/geocoding');\n\nvar MapboxEventManager = require('./events');\n\nvar localization = require('./localization');\n\nvar subtag = require('subtag');\n\nvar Geolocation = require('./geolocation');\n\nvar utils = require('./utils');\n\nconst GEOCODE_REQUEST_TYPE = {\n  FORWARD: 0,\n  LOCAL: 1,\n  REVERSE: 2\n};\n/**\n * Don't include this as part of the options object when creating a new MapboxGeocoder instance.\n */\n\nfunction getFooterNode() {\n  var div = document.createElement('div');\n  div.className = 'mapboxgl-ctrl-geocoder--powered-by';\n  div.innerHTML = '<a href=\"https://www.mapbox.com/search-service\" target=\"_blank\">Powered by Mapbox</a>';\n  return div;\n}\n/**\n * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object|'ip'} [options.proximity] a geographical point given as an object with `latitude` and `longitude` properties, or the string 'ip' to use a user's IP address location. Search results closer to this point will be given higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will dynamically update based on the current map view or user's IP location, depending on zoom level.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled and no type is specified, the type defaults to POIs. Otherwise, if you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {boolean} [options.flipCoordinates=false] If `true`, search input coordinates for reverse geocoding is expected to be in the form `lon, lat` instead of the default `lat, lon`.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.\n * @param {Boolean} [options.autocomplete=true] Specify whether to return autocomplete results or not. When autocomplete is enabled, results will be included that start with the requested string, rather than just responses that match it exactly.\n * @param {Boolean} [options.fuzzyMatch=true] Specify whether the Geocoding API should attempt approximate, as well as exact, matching when performing searches, or whether it should opt out of this behavior and only attempt exact matching.\n * @param {Boolean} [options.routing=false] Specify whether to request additional metadata about the recommended navigation destination corresponding to the feature or not. Only applicable for address features.\n * @param {String} [options.worldview=\"us\"] Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @param {Boolean} [options.enableGeolocation=false] If `true` enable user geolocation feature.\n * @param {('address'|'street'|'place'|'country')} [options.addressAccuracy=\"street\"] The accuracy for the geolocation feature with which we define the address line to fill. The browser API returns the user's position with accuracy, and sometimes we can get the neighbor's address. To prevent receiving an incorrect address, you can reduce the accuracy of the definition.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n  this.geolocation = new Geolocation();\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    flipCoordinates: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    enableGeolocation: false,\n    addressAccuracy: 'street',\n    getItemValue: function (item) {\n      return item.place_name;\n    },\n    render: function (item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0] + '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function (container) {\n    function addToExistingContainer(geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\"Element provided to #addTo() exists, but is not in the DOM\");\n      }\n\n      const el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n\n      container.appendChild(el);\n    } // if the container is a map, add the control like normal\n\n\n    if (container._controlContainer) {\n      //  it's a mapbox-gl map, add like normal\n      container.addControl(this);\n    } // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    } // if the container is a string, treat it as a CSS query\n    else if (typeof container == 'string') {\n      const parent = document.querySelectorAll(container);\n\n      if (parent.length === 0) {\n        throw new Error(\"Element \", container, \"not found.\");\n      }\n\n      if (parent.length > 1) {\n        throw new Error(\"Geocoder can only be added to a single html element\");\n      }\n\n      addToExistingContainer(this, parent[0]);\n    } else {\n      throw new Error(\"Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element\");\n    }\n  },\n  onAdd: function (map) {\n    if (map && typeof map != 'string') {\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly) {\n      this.geocoderService = mbxGeocoder(MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      }));\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder) {\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\");\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n    this._geolocateUser = this._geolocateUser.bind(this);\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>');\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n\n    this._inputEl.addEventListener('paste', this._onPaste);\n\n    this._inputEl.addEventListener('change', this._onChange);\n\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n\n    this._inputEl.addEventListener('keyup', function (e) {\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n    this._clearEl = document.createElement('button');\n\n    this._clearEl.setAttribute('aria-label', 'Clear');\n\n    this._clearEl.addEventListener('click', this.clear);\n\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>');\n\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    if (this.options.enableGeolocation && this.geolocation.isSupport()) {\n      this._geolocateEl = document.createElement('button');\n\n      this._geolocateEl.setAttribute('aria-label', 'Geolocate');\n\n      this._geolocateEl.addEventListener('click', this._geolocateUser);\n\n      this._geolocateEl.className = 'mapboxgl-ctrl-geocoder--button';\n      var geolocateIcon = this.createIcon('geolocate', '<path d=\"M12.999 3.677L2.042 8.269c-.962.403-.747 1.823.29 1.912l5.032.431.431 5.033c.089 1.037 1.509 1.252 1.912.29l4.592-10.957c.345-.822-.477-1.644-1.299-1.299z\" fill=\"#4264fb\"/>');\n\n      this._geolocateEl.appendChild(geolocateIcon);\n\n      actions.appendChild(this._geolocateEl);\n\n      this._showGeolocateButton();\n    }\n\n    var typeahead = this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n    this.setRenderFunction(this.options.render);\n    typeahead.getItemValue = this.options.getItemValue; // Add support for footer.\n\n    var parentDraw = typeahead.list.draw;\n    var footerNode = this._footerNode = getFooterNode();\n\n    typeahead.list.draw = function () {\n      parentDraw.call(this);\n      footerNode.addEventListener('mousedown', function () {\n        this.selectingListItem = true;\n      }.bind(this));\n      footerNode.addEventListener('mouseup', function () {\n        this.selectingListItem = false;\n      }.bind(this));\n      this.element.appendChild(footerNode);\n    };\n\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n\n    if (this._map) {\n      if (this.options.trackProximity) {\n        this._updateProximity();\n\n        this._map.on('moveend', this._updateProximity);\n      }\n\n      this._mapboxgl = this.options.mapboxgl;\n\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n\n    return el;\n  },\n  _geolocateUser: function () {\n    this._hideGeolocateButton();\n\n    this._showLoadingIcon();\n\n    this.geolocation.getCurrentPosition().then(function (geolocationPosition) {\n      this._hideLoadingIcon();\n\n      const geojson = {\n        geometry: {\n          type: 'Point',\n          coordinates: [geolocationPosition.coords.longitude, geolocationPosition.coords.latitude]\n        }\n      };\n\n      this._handleMarker(geojson);\n\n      this._fly(geojson);\n\n      this._typeahead.clear();\n\n      this._typeahead.selected = true;\n      this.lastSelected = JSON.stringify(geojson);\n\n      this._showClearButton();\n\n      this.fresh = false;\n      const config = {\n        limit: 1,\n        language: [this.options.language],\n        query: geojson.geometry.coordinates,\n        types: [\"address\"]\n      };\n\n      if (this.options.localGeocoderOnly) {\n        const text = geojson.geometry.coordinates[0] + ',' + geojson.geometry.coordinates[1];\n\n        this._setInputValue(text);\n\n        this._eventEmitter.emit('result', {\n          result: geojson\n        });\n      } else {\n        this.geocoderService.reverseGeocode(config).send().then(function (resp) {\n          const feature = resp.body.features[0];\n\n          if (feature) {\n            const locationText = utils.transformFeatureToGeolocationText(feature, this.options.addressAccuracy);\n\n            this._setInputValue(locationText);\n\n            feature.user_coordinates = geojson.geometry.coordinates;\n\n            this._eventEmitter.emit('result', {\n              result: feature\n            });\n          } else {\n            this._eventEmitter.emit('result', {\n              result: {\n                user_coordinates: geojson.geometry.coordinates\n              }\n            });\n          }\n        }.bind(this));\n      }\n    }.bind(this)).catch(function (error) {\n      if (error.code === 1) {\n        this._renderUserDeniedGeolocationError();\n      } else {\n        this._renderLocationError();\n      }\n\n      this._hideLoadingIcon();\n\n      this._showGeolocateButton();\n\n      this._hideAttribution();\n    }.bind(this));\n  },\n  createIcon: function (name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space', 'preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18);\n    icon.innerHTML = path;\n    return icon;\n  },\n  onRemove: function () {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n    return this;\n  },\n  _setInputValue: function (value) {\n    this._inputEl.value = value;\n    setTimeout(function () {\n      this._inputEl.focus();\n\n      this._inputEl.scrollLeft = 0;\n\n      this._inputEl.setSelectionRange(0, 0);\n    }.bind(this), 1);\n  },\n  _onPaste: function (e) {\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n  _onKeyDown: function (e) {\n    var ESC_KEY_CODE = 27,\n        TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n\n      return this._inputEl.blur();\n    } // if target has shadowRoot, then get the actual active element inside the shadowRoot\n\n\n    var target = e.target && e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;\n    var value = target ? target.value : '';\n\n    if (!value) {\n      this.fresh = true; // the user has removed all the text\n\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n\n      this._showGeolocateButton();\n\n      return this._hideClearButton();\n    }\n\n    this._hideGeolocateButton(); // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n\n    if (e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n  _showButton: function () {\n    if (this._typeahead.selected) this._showClearButton();\n  },\n  _hideButton: function () {\n    if (this._typeahead.selected) this._hideClearButton();\n  },\n  _showClearButton: function () {\n    this._clearEl.style.display = 'block';\n  },\n  _hideClearButton: function () {\n    this._clearEl.style.display = 'none';\n  },\n  _showGeolocateButton: function () {\n    if (this._geolocateEl && this.geolocation.isSupport()) {\n      this._geolocateEl.style.display = 'block';\n    }\n  },\n  _hideGeolocateButton: function () {\n    if (this._geolocateEl) {\n      this._geolocateEl.style.display = 'none';\n    }\n  },\n  _showLoadingIcon: function () {\n    this._loadingEl.style.display = 'block';\n  },\n  _hideLoadingIcon: function () {\n    this._loadingEl.style.display = 'none';\n  },\n  _showAttribution: function () {\n    this._footerNode.style.display = 'block';\n  },\n  _hideAttribution: function () {\n    this._footerNode.style.display = 'none';\n  },\n  _onBlur: function (e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function () {\n    var selected = this._typeahead.selected;\n\n    if (selected && JSON.stringify(selected) !== this.lastSelected) {\n      this._hideClearButton();\n\n      if (this.options.flyTo) {\n        this._fly(selected);\n      }\n\n      if (this.options.marker && this._mapboxgl) {\n        this._handleMarker(selected);\n      } // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n\n\n      this._inputEl.focus();\n\n      this._inputEl.scrollLeft = 0;\n\n      this._inputEl.setSelectionRange(0, 0);\n\n      this.lastSelected = JSON.stringify(selected);\n\n      this._eventEmitter.emit('result', {\n        result: selected\n      });\n\n      this.eventManager.select(selected, this);\n    }\n  },\n  _fly: function (selected) {\n    var flyOptions;\n\n    if (selected.properties && exceptions[selected.properties.short_code]) {\n      // Certain geocoder search results return (and therefore zoom to fit)\n      // an unexpectedly large bounding box: for example, both Russia and the\n      // USA span both sides of -180/180, or France includes the island of\n      // Reunion in the Indian Ocean. An incomplete list of these exceptions\n      // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n      // short-term solution; this may be amended as necessary.\n      flyOptions = extend({}, this.options.flyTo);\n\n      if (this._map) {\n        this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n      }\n    } else if (selected.bbox) {\n      var bbox = selected.bbox;\n      flyOptions = extend({}, this.options.flyTo);\n\n      if (this._map) {\n        this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n      }\n    } else {\n      var defaultFlyOptions = {\n        zoom: this.options.zoom\n      };\n      flyOptions = extend({}, defaultFlyOptions, this.options.flyTo); //  ensure that center is not overriden by custom options\n\n      if (selected.center) {\n        flyOptions.center = selected.center;\n      } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n        flyOptions.center = selected.geometry.coordinates;\n      }\n\n      if (this._map) {\n        this._map.flyTo(flyOptions);\n      }\n    }\n  },\n  _requestType: function (options, search) {\n    var type;\n\n    if (options.localGeocoderOnly) {\n      type = GEOCODE_REQUEST_TYPE.LOCAL;\n    } else if (options.reverseGeocode && utils.REVERSE_GEOCODE_COORD_RGX.test(search)) {\n      type = GEOCODE_REQUEST_TYPE.REVERSE;\n    } else {\n      type = GEOCODE_REQUEST_TYPE.FORWARD;\n    }\n\n    return type;\n  },\n  _setupConfig: function (requestType, search) {\n    // Possible config properties to pass to client\n    const keys = ['bbox', 'limit', 'proximity', 'countries', 'types', 'language', 'reverseMode', 'mode', 'autocomplete', 'fuzzyMatch', 'routing', 'worldview'];\n    const spacesOrCommaRgx = /[\\s,]+/;\n    var self = this;\n    var config = keys.reduce(function (config, key) {\n      // don't include undefined/null params, but allow boolean, among other, values\n      if (self.options[key] === undefined || self.options[key] === null) {\n        return config;\n      } // countries, types, and language need to be passed in as arrays to client\n      // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n\n\n      ['countries', 'types', 'language'].indexOf(key) > -1 ? config[key] = self.options[key].split(spacesOrCommaRgx) : config[key] = self.options[key];\n      const isCoordKey = typeof self.options[key].longitude === 'number' && typeof self.options[key].latitude === 'number';\n\n      if (key === 'proximity' && isCoordKey) {\n        const lng = self.options[key].longitude;\n        const lat = self.options[key].latitude;\n        config[key] = [lng, lat];\n      }\n\n      return config;\n    }, {});\n\n    switch (requestType) {\n      case GEOCODE_REQUEST_TYPE.REVERSE:\n        {\n          var coords = search.split(spacesOrCommaRgx).map(function (c) {\n            return parseFloat(c, 10);\n          });\n\n          if (!self.options.flipCoordinates) {\n            coords.reverse();\n          } // client only accepts one type for reverseGeocode, so\n          // use first config type if one, if not default to poi\n\n\n          config.types ? [config.types[0]] : [\"poi\"];\n          config = extend(config, {\n            query: coords,\n            limit: 1\n          }); // Remove config options not supported by the reverseGeocoder\n\n          ['proximity', 'autocomplete', 'fuzzyMatch', 'bbox'].forEach(function (key) {\n            if (key in config) {\n              delete config[key];\n            }\n          });\n        }\n        break;\n\n      case GEOCODE_REQUEST_TYPE.FORWARD:\n        {\n          // Ensure that any reverse geocoding looking request is cleaned up\n          // to be processed as only a forward geocoding request by the server.\n          const trimmedSearch = search.trim();\n          const reverseGeocodeCoordRgx = /^(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)?$/;\n\n          if (reverseGeocodeCoordRgx.test(trimmedSearch)) {\n            search = search.replace(/,/g, ' ');\n          }\n\n          config = extend(config, {\n            query: search\n          });\n        }\n        break;\n    }\n\n    return config;\n  },\n  _geocode: function (searchInput) {\n    this.inputString = searchInput;\n\n    this._showLoadingIcon();\n\n    this._eventEmitter.emit('loading', {\n      query: searchInput\n    });\n\n    const requestType = this._requestType(this.options, searchInput);\n\n    const config = this._setupConfig(requestType, searchInput);\n\n    var request;\n\n    switch (requestType) {\n      case GEOCODE_REQUEST_TYPE.LOCAL:\n        request = Promise.resolve();\n        break;\n\n      case GEOCODE_REQUEST_TYPE.FORWARD:\n        request = this.geocoderService.forwardGeocode(config).send();\n        break;\n\n      case GEOCODE_REQUEST_TYPE.REVERSE:\n        request = this.geocoderService.reverseGeocode(config).send();\n        break;\n    }\n\n    var localGeocoderRes = this.options.localGeocoder ? this.options.localGeocoder(searchInput) || [] : [];\n    var externalGeocoderRes = [];\n    var geocoderError = null;\n    request.catch(function (error) {\n      geocoderError = error;\n    }.bind(this)).then(function (response) {\n      this._hideLoadingIcon();\n\n      var res = {};\n\n      if (!response) {\n        res = {\n          type: 'FeatureCollection',\n          features: []\n        };\n      } else if (response.statusCode == '200') {\n        res = response.body;\n        res.request = response.request;\n        res.headers = response.headers;\n      }\n\n      res.config = config;\n\n      if (this.fresh) {\n        this.eventManager.start(this);\n        this.fresh = false;\n      } // supplement Mapbox Geocoding API results with locally populated results\n\n\n      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes;\n\n      if (this.options.externalGeocoder) {\n        externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || Promise.resolve([]); // supplement Mapbox Geocoding API results with features returned by a promise\n\n        return externalGeocoderRes.then(function (features) {\n          res.features = res.features ? features.concat(res.features) : features;\n          return res;\n        }, function () {\n          // on error, display the original result\n          return res;\n        });\n      }\n\n      return res;\n    }.bind(this)).then(function (res) {\n      if (geocoderError) {\n        throw geocoderError;\n      } // apply results filter if provided\n\n\n      if (this.options.filter && res.features.length) {\n        res.features = res.features.filter(this.options.filter);\n      }\n\n      if (res.features.length) {\n        this._showClearButton();\n\n        this._hideGeolocateButton();\n\n        this._showAttribution();\n\n        this._eventEmitter.emit('results', res);\n\n        this._typeahead.update(res.features);\n      } else {\n        this._hideClearButton();\n\n        this._hideAttribution();\n\n        this._typeahead.selected = null;\n\n        this._renderNoResults();\n\n        this._eventEmitter.emit('results', res);\n      }\n    }.bind(this)).catch(function (err) {\n      this._hideLoadingIcon();\n\n      this._hideAttribution(); // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n\n\n      if (localGeocoderRes.length && this.options.localGeocoder || externalGeocoderRes.length && this.options.externalGeocoder) {\n        this._showClearButton();\n\n        this._hideGeolocateButton();\n\n        this._typeahead.update(localGeocoderRes);\n      } else {\n        this._hideClearButton();\n\n        this._typeahead.selected = null;\n\n        this._renderError();\n      }\n\n      this._eventEmitter.emit('results', {\n        features: localGeocoderRes\n      });\n\n      this._eventEmitter.emit('error', {\n        error: err\n      });\n    }.bind(this));\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function (ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    this._hideClearButton();\n\n    this._showGeolocateButton();\n\n    this._removeMarker();\n\n    this.lastSelected = null;\n\n    this._eventEmitter.emit('clear');\n\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function (ev) {\n    this._clear(ev);\n\n    this._inputEl.focus();\n  },\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function (ev) {\n    var ctx = this;\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n  _onQueryResult: function (response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n\n    this._onChange();\n  },\n  _updateProximity: function () {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map || !this.options.trackProximity) {\n      return;\n    }\n\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n\n      this.setProximity({\n        longitude: center.lng,\n        latitude: center.lat\n      }, false);\n    } else {\n      this.setProximity(null, false);\n    }\n  },\n  _collapse: function () {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n  _unCollapse: function () {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function (searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n\n    return this;\n  },\n  _renderError: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderLocationError: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>A location error has occurred</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderNoResults: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderUserDeniedGeolocationError: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>Geolocation permission denied</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderMessage: function (msg) {\n    this._typeahead.update([]);\n\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function () {\n    if (this.options.placeholder) return this.options.placeholder;\n\n    if (this.options.language) {\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function (searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    if (searchInput.length >= this.options.minLength) {\n      this._geocode(searchInput);\n    }\n\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object|'ip'} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties or the string 'ip'.\n   * @param {Boolean} disableTrackProximity If true, sets `trackProximity` to false. True by default to prevent `trackProximity` from unintentionally overriding an explicitly set proximity value.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function (proximity) {\n    let disableTrackProximity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.options.proximity = proximity;\n\n    if (disableTrackProximity) {\n      this.options.trackProximity = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function () {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function (fn) {\n    if (fn && typeof fn == \"function\") {\n      this._typeahead.render = fn;\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function () {\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function (language) {\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function () {\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function () {\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function (zoom) {\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function () {\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function (flyTo) {\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function () {\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function (placeholder) {\n    this.placeholder = placeholder ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n\n    this._inputEl.setAttribute('aria-label', this.placeholder);\n\n    return this;\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function () {\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function (bbox) {\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function () {\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function (countries) {\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function () {\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function (types) {\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function () {\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function (minLength) {\n    this.options.minLength = minLength;\n    if (this._typeahead) this._typeahead.options.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function () {\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function (limit) {\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function () {\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function (filter) {\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function (origin) {\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(MapboxClient({\n      accessToken: this.options.accessToken,\n      origin: this.options.origin\n    }));\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function () {\n    return this.options.origin;\n  },\n\n  /**\n   * Set the accessToken option used for the geocoding request endpoint.\n   * @param {String} accessToken value\n   * @returns {MapboxGeocoder} this\n   */\n  setAccessToken: function (accessToken) {\n    this.options.accessToken = accessToken;\n    this.geocoderService = mbxGeocoder(MapboxClient({\n      accessToken: this.options.accessToken,\n      origin: this.options.origin\n    }));\n    return this;\n  },\n\n  /**\n   * Set the autocomplete option used for geocoding requests\n   * @param {Boolean} value The boolean value to set autocomplete to\n   * @returns\n   */\n  setAutocomplete: function (value) {\n    this.options.autocomplete = value;\n    return this;\n  },\n\n  /**\n   * Get the current autocomplete parameter value used for requests\n   * @returns {Boolean} The autocomplete parameter value\n   */\n  getAutocomplete: function () {\n    return this.options.autocomplete;\n  },\n\n  /**\n   * Set the fuzzyMatch option used for approximate matching in geocoding requests\n   * @param {Boolean} value The boolean value to set fuzzyMatch to\n   * @returns\n   */\n  setFuzzyMatch: function (value) {\n    this.options.fuzzyMatch = value;\n    return this;\n  },\n\n  /**\n   * Get the current fuzzyMatch parameter value used for requests\n   * @returns {Boolean} The fuzzyMatch parameter value\n   */\n  getFuzzyMatch: function () {\n    return this.options.fuzzyMatch;\n  },\n\n  /**\n   * Set the routing parameter used to ask for routable point metadata in geocoding requests\n   * @param {Boolean} value The boolean value to set routing to\n   * @returns\n   */\n  setRouting: function (value) {\n    this.options.routing = value;\n    return this;\n  },\n\n  /**\n   * Get the current routing parameter value used for requests\n   * @returns {Boolean} The routing parameter value\n   */\n  getRouting: function () {\n    return this.options.routing;\n  },\n\n  /**\n   * Set the worldview parameter\n   * @param {String} code The country code representing the worldview (e.g. \"us\" | \"cn\" | \"jp\", \"in\")\n   * @returns\n   */\n  setWorldview: function (code) {\n    this.options.worldview = code;\n    return this;\n  },\n\n  /**\n   * Get the current worldview parameter value used for requests\n   * @returns {String} The worldview parameter value\n   */\n  getWorldview: function () {\n    return this.options.worldview;\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function (selected) {\n    // clean up any old marker that might be present\n    if (!this._map) {\n      return;\n    }\n\n    this._removeMarker();\n\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    };\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker);\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n\n    if (selected.center) {\n      this.mapMarker.setLngLat(selected.center).addTo(this._map);\n    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n      this.mapMarker.setLngLat(selected.geometry.coordinates).addTo(this._map);\n    }\n\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function () {\n    if (this.mapMarker) {\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function (type, fn) {\n    this._eventEmitter.on(type, fn);\n\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function (type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n\n    this.eventManager.remove();\n    return this;\n  }\n};\nmodule.exports = MapboxGeocoder;","map":{"version":3,"names":["Typeahead","require","debounce","extend","EventEmitter","exceptions","MapboxClient","mbxGeocoder","MapboxEventManager","localization","subtag","Geolocation","utils","GEOCODE_REQUEST_TYPE","FORWARD","LOCAL","REVERSE","getFooterNode","div","document","createElement","className","innerHTML","MapboxGeocoder","options","_eventEmitter","inputString","fresh","lastSelected","geolocation","prototype","zoom","flyTo","trackProximity","minLength","reverseGeocode","flipCoordinates","limit","origin","enableEventLogging","marker","mapboxgl","collapsed","clearAndBlurOnEsc","clearOnBlur","enableGeolocation","addressAccuracy","getItemValue","item","place_name","render","placeName","split","splice","length","join","addTo","container","addToExistingContainer","geocoder","body","contains","Error","el","onAdd","appendChild","_controlContainer","addControl","HTMLElement","parent","querySelectorAll","map","_map","setLanguage","localGeocoderOnly","geocoderService","accessToken","localGeocoder","eventManager","_onChange","bind","_onKeyDown","_onPaste","_onBlur","_showButton","_hideButton","_onQueryResult","clear","_updateProximity","_collapse","_unCollapse","_clear","_clearOnBlur","_geolocateUser","searchIcon","createIcon","_inputEl","type","setPlaceholder","addEventListener","e","keyevent","actions","classList","add","_clearEl","setAttribute","buttonIcon","_loadingEl","isSupport","_geolocateEl","geolocateIcon","_showGeolocateButton","typeahead","_typeahead","filter","setRenderFunction","parentDraw","list","draw","footerNode","_footerNode","call","selectingListItem","element","mapMarker","_handleMarker","on","_mapboxgl","console","error","_hideGeolocateButton","_showLoadingIcon","getCurrentPosition","then","geolocationPosition","_hideLoadingIcon","geojson","geometry","coordinates","coords","longitude","latitude","_fly","selected","JSON","stringify","_showClearButton","config","language","query","types","text","_setInputValue","emit","result","send","resp","feature","features","locationText","transformFeatureToGeolocationText","user_coordinates","catch","code","_renderUserDeniedGeolocationError","_renderLocationError","_hideAttribution","name","path","icon","createElementNS","onRemove","parentNode","removeChild","off","_removeMarker","value","setTimeout","focus","scrollLeft","setSelectionRange","clipboardData","window","getData","_geocode","ESC_KEY_CODE","TAB_KEY_CODE","keyCode","blur","target","shadowRoot","activeElement","_hideClearButton","metaKey","indexOf","style","display","_showAttribution","select","flyOptions","properties","short_code","fitBounds","bbox","defaultFlyOptions","center","_requestType","search","REVERSE_GEOCODE_COORD_RGX","test","_setupConfig","requestType","keys","spacesOrCommaRgx","self","reduce","key","undefined","isCoordKey","lng","lat","c","parseFloat","reverse","forEach","trimmedSearch","trim","reverseGeocodeCoordRgx","replace","searchInput","request","Promise","resolve","forwardGeocode","localGeocoderRes","externalGeocoderRes","geocoderError","response","res","statusCode","headers","start","concat","externalGeocoder","update","_renderNoResults","err","_renderError","ev","preventDefault","ctx","relatedTarget","results","getZoom","getCenter","wrap","setProximity","remove","errorMessage","_renderMessage","msg","renderError","_getPlaceholderText","placeholder","firstLanguage","localizedValue","setInput","proximity","disableTrackProximity","getProximity","fn","getRenderFunction","browserLocale","navigator","userLanguage","browserLanguage","getLanguage","setZoom","getFlyTo","setFlyTo","getPlaceholder","getBbox","setBbox","getCountries","countries","setCountries","getTypes","setTypes","getMinLength","setMinLength","getLimit","setLimit","getFilter","setFilter","setOrigin","getOrigin","setAccessToken","setAutocomplete","autocomplete","getAutocomplete","setFuzzyMatch","fuzzyMatch","getFuzzyMatch","setRouting","routing","getRouting","setWorldview","worldview","getWorldview","defaultMarkerOptions","color","markerOptions","Marker","setLngLat","removeListener","module","exports"],"sources":["D:/Github/mobx/multiple-mobx/node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js"],"sourcesContent":["'use strict';\n\nvar Typeahead = require('suggestions');\nvar debounce = require('lodash.debounce');\nvar extend = require('xtend');\nvar EventEmitter = require('events').EventEmitter;\nvar exceptions = require('./exceptions');\nvar MapboxClient = require('@mapbox/mapbox-sdk');\nvar mbxGeocoder = require('@mapbox/mapbox-sdk/services/geocoding');\nvar MapboxEventManager = require('./events');\nvar localization = require('./localization');\nvar subtag = require('subtag');\nvar Geolocation = require('./geolocation');\nvar utils = require('./utils');\n\n\nconst GEOCODE_REQUEST_TYPE = {\n  FORWARD: 0,\n  LOCAL: 1,\n  REVERSE: 2,\n};\n\n/**\n * Don't include this as part of the options object when creating a new MapboxGeocoder instance.\n */\nfunction getFooterNode() {\n  var div = document.createElement('div');\n  div.className = 'mapboxgl-ctrl-geocoder--powered-by';\n  div.innerHTML = '<a href=\"https://www.mapbox.com/search-service\" target=\"_blank\">Powered by Mapbox</a>';\n\n  return div;\n}\n\n/**\n * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object|'ip'} [options.proximity] a geographical point given as an object with `latitude` and `longitude` properties, or the string 'ip' to use a user's IP address location. Search results closer to this point will be given higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will dynamically update based on the current map view or user's IP location, depending on zoom level.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled and no type is specified, the type defaults to POIs. Otherwise, if you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {boolean} [options.flipCoordinates=false] If `true`, search input coordinates for reverse geocoding is expected to be in the form `lon, lat` instead of the default `lat, lon`.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.\n * @param {Boolean} [options.autocomplete=true] Specify whether to return autocomplete results or not. When autocomplete is enabled, results will be included that start with the requested string, rather than just responses that match it exactly.\n * @param {Boolean} [options.fuzzyMatch=true] Specify whether the Geocoding API should attempt approximate, as well as exact, matching when performing searches, or whether it should opt out of this behavior and only attempt exact matching.\n * @param {Boolean} [options.routing=false] Specify whether to request additional metadata about the recommended navigation destination corresponding to the feature or not. Only applicable for address features.\n * @param {String} [options.worldview=\"us\"] Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @param {Boolean} [options.enableGeolocation=false] If `true` enable user geolocation feature.\n * @param {('address'|'street'|'place'|'country')} [options.addressAccuracy=\"street\"] The accuracy for the geolocation feature with which we define the address line to fill. The browser API returns the user's position with accuracy, and sometimes we can get the neighbor's address. To prevent receiving an incorrect address, you can reduce the accuracy of the definition.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n  this.geolocation = new Geolocation();\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    flipCoordinates: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    enableGeolocation: false,\n    addressAccuracy: 'street',\n    getItemValue: function(item) {\n      return item.place_name\n    },\n    render: function(item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0]+ '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function(container){\n\n    function addToExistingContainer (geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\"Element provided to #addTo() exists, but is not in the DOM\")\n      }\n      const el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n      container.appendChild(el);\n    }\n\n    // if the container is a map, add the control like normal\n    if (container._controlContainer){\n      //  it's a mapbox-gl map, add like normal\n      container.addControl(this);\n    }\n    // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    }\n    // if the container is a string, treat it as a CSS query\n    else if (typeof container == 'string'){\n      const parent = document.querySelectorAll(container);\n      if (parent.length === 0){\n        throw new Error(\"Element \", container, \"not found.\")\n      }\n\n      if (parent.length > 1){\n        throw new Error(\"Geocoder can only be added to a single html element\")\n      }\n\n      addToExistingContainer(this, parent[0]);\n    }else{\n      throw new Error(\"Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element\")\n    }\n  },\n\n  onAdd: function(map) {\n    if (map && typeof map != 'string'){\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly){\n      this.geocoderService = mbxGeocoder(\n        MapboxClient({\n          accessToken: this.options.accessToken,\n          origin: this.options.origin\n        })\n      );\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder){\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\")\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n    this._geolocateUser = this._geolocateUser.bind(this);\n\n    var el = (this.container = document.createElement('div'));\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>')\n\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n    this._inputEl.addEventListener('paste', this._onPaste);\n    this._inputEl.addEventListener('change', this._onChange);\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n    this._inputEl.addEventListener('keyup', function(e){\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n\n    this._clearEl = document.createElement('button');\n    this._clearEl.setAttribute('aria-label', 'Clear');\n    this._clearEl.addEventListener('click', this.clear);\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>')\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    if (this.options.enableGeolocation && this.geolocation.isSupport()) {\n      this._geolocateEl = document.createElement('button');\n      this._geolocateEl.setAttribute('aria-label', 'Geolocate');\n      this._geolocateEl.addEventListener('click', this._geolocateUser);\n      this._geolocateEl.className = 'mapboxgl-ctrl-geocoder--button';\n\n      var geolocateIcon = this.createIcon('geolocate', '<path d=\"M12.999 3.677L2.042 8.269c-.962.403-.747 1.823.29 1.912l5.032.431.431 5.033c.089 1.037 1.509 1.252 1.912.29l4.592-10.957c.345-.822-.477-1.644-1.299-1.299z\" fill=\"#4264fb\"/>');\n      this._geolocateEl.appendChild(geolocateIcon);\n\n      actions.appendChild(this._geolocateEl);\n      this._showGeolocateButton();\n    }\n\n    var typeahead = this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n\n    this.setRenderFunction(this.options.render);\n    typeahead.getItemValue = this.options.getItemValue;\n\n    // Add support for footer.\n    var parentDraw = typeahead.list.draw;\n    var footerNode = this._footerNode = getFooterNode();\n    typeahead.list.draw = function() {\n      parentDraw.call(this);\n\n      footerNode.addEventListener('mousedown', function() {\n        this.selectingListItem = true;\n      }.bind(this));\n    \n      footerNode.addEventListener('mouseup', function() {\n        this.selectingListItem = false;\n      }.bind(this));\n\n      this.element.appendChild(footerNode);\n    };\n\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n    if (this._map){\n      if (this.options.trackProximity ) {\n        this._updateProximity();\n        this._map.on('moveend', this._updateProximity);\n      }\n      this._mapboxgl = this.options.mapboxgl;\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n    return el;\n  },\n\n  _geolocateUser: function () {\n    this._hideGeolocateButton();\n    this._showLoadingIcon();\n\n    this.geolocation.getCurrentPosition().then(function(geolocationPosition) {\n      this._hideLoadingIcon();\n\n      const geojson = {\n        geometry: {\n          type: 'Point',\n          coordinates: [geolocationPosition.coords.longitude, geolocationPosition.coords.latitude]\n        }\n      };\n\n      this._handleMarker(geojson);\n      this._fly(geojson);\n\n      this._typeahead.clear();\n      this._typeahead.selected = true;\n      this.lastSelected = JSON.stringify(geojson);\n      this._showClearButton();\n      this.fresh = false;\n\n      const config = {\n        limit: 1,\n        language: [this.options.language],\n        query: geojson.geometry.coordinates,\n        types: [\"address\"]\n      };\n\n      if (this.options.localGeocoderOnly) {\n        const text = geojson.geometry.coordinates[0] + ',' + geojson.geometry.coordinates[1]\n        this._setInputValue(text);\n\n        this._eventEmitter.emit('result', { result: geojson });\n      } else {\n        this.geocoderService.reverseGeocode(config).send().then(function (resp) {\n          const feature = resp.body.features[0];\n  \n          if (feature) {\n            const locationText = utils.transformFeatureToGeolocationText(feature, this.options.addressAccuracy);\n            this._setInputValue(locationText);\n  \n            feature.user_coordinates = geojson.geometry.coordinates;\n            this._eventEmitter.emit('result', { result: feature });\n          } else {\n            this._eventEmitter.emit('result', { result: { user_coordinates: geojson.geometry.coordinates } });\n          }\n        }.bind(this));\n      }\n    }.bind(this)).catch(function(error) {\n      if (error.code === 1) {\n        this._renderUserDeniedGeolocationError();\n      } else {\n        this._renderLocationError();\n      }\n\n      this._hideLoadingIcon();\n      this._showGeolocateButton();\n      this._hideAttribution();\n    }.bind(this));\n  },\n\n  createIcon: function(name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space','preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18);\n    icon.innerHTML = path;\n    return icon;\n  },\n\n  onRemove: function() {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n\n    return this;\n  },\n\n  _setInputValue: function (value) {\n    this._inputEl.value = value;\n  \n    setTimeout(function () {\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n    }.bind(this), 1);\n  },\n\n  _onPaste: function(e){\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n\n  _onKeyDown: function(e) {\n    var ESC_KEY_CODE = 27,\n      TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n      return this._inputEl.blur();\n    }\n\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target = e.target && e.target.shadowRoot\n      ? e.target.shadowRoot.activeElement\n      : e.target;\n    var value = target ? target.value : '';\n\n    if (!value) {\n      this.fresh = true;\n      // the user has removed all the text\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      this._showGeolocateButton();\n      return this._hideClearButton();\n    }\n\n    this._hideGeolocateButton();\n\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if ((e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1))\n      return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n\n  _showButton: function() {\n    if (this._typeahead.selected) this._showClearButton();\n  },\n\n  _hideButton: function() {\n    if (this._typeahead.selected) this._hideClearButton();\n  },\n\n  _showClearButton: function() {\n    this._clearEl.style.display = 'block';\n  },\n\n  _hideClearButton: function() {\n    this._clearEl.style.display = 'none'\n  },\n\n  _showGeolocateButton: function() {\n    if (this._geolocateEl && this.geolocation.isSupport()) {\n      this._geolocateEl.style.display = 'block';\n    }\n  },\n\n  _hideGeolocateButton: function() {\n    if (this._geolocateEl) {\n      this._geolocateEl.style.display = 'none';\n    }\n  },\n\n  _showLoadingIcon: function() {\n    this._loadingEl.style.display = 'block';\n  },\n  \n  _hideLoadingIcon: function() {\n    this._loadingEl.style.display = 'none';\n  },\n\n  _showAttribution: function() {\n    this._footerNode.style.display = 'block'\n  },\n  \n  _hideAttribution: function() {\n    this._footerNode.style.display = 'none'\n  },\n\n  _onBlur: function(e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function() {\n    var selected = this._typeahead.selected;\n    if (selected  && JSON.stringify(selected) !== this.lastSelected) {\n      this._hideClearButton();\n      if (this.options.flyTo) {\n        this._fly(selected);\n      }\n      if (this.options.marker && this._mapboxgl){\n        this._handleMarker(selected);\n      }\n\n      // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n      this.lastSelected = JSON.stringify(selected);\n      this._eventEmitter.emit('result', { result: selected });\n      this.eventManager.select(selected, this);\n    }\n  },\n\n  _fly: function(selected) {\n    var flyOptions;\n    if (selected.properties && exceptions[selected.properties.short_code]) {\n      // Certain geocoder search results return (and therefore zoom to fit)\n      // an unexpectedly large bounding box: for example, both Russia and the\n      // USA span both sides of -180/180, or France includes the island of\n      // Reunion in the Indian Ocean. An incomplete list of these exceptions\n      // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n      // short-term solution; this may be amended as necessary.\n      flyOptions = extend({}, this.options.flyTo);\n      if (this._map){\n        this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n      }\n    } else if (selected.bbox) {\n      var bbox = selected.bbox;\n      flyOptions = extend({}, this.options.flyTo);\n      if (this._map){\n        this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n      }\n    } else {\n      var defaultFlyOptions = {\n        zoom: this.options.zoom\n      }\n      flyOptions = extend({}, defaultFlyOptions, this.options.flyTo);\n      //  ensure that center is not overriden by custom options\n      if (selected.center) {\n        flyOptions.center = selected.center;\n      } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n        flyOptions.center = selected.geometry.coordinates;\n      }\n\n      if (this._map){\n        this._map.flyTo(flyOptions);\n      }\n    }\n  },\n\n  _requestType: function(options, search) {\n    var type;\n    if (options.localGeocoderOnly) {\n      type = GEOCODE_REQUEST_TYPE.LOCAL;\n    } else if (options.reverseGeocode && utils.REVERSE_GEOCODE_COORD_RGX.test(search)) {\n      type = GEOCODE_REQUEST_TYPE.REVERSE;\n    } else {\n      type = GEOCODE_REQUEST_TYPE.FORWARD;\n    }\n    return type;\n  },\n\n  _setupConfig: function(requestType, search) {\n    // Possible config properties to pass to client\n    const keys = [\n      'bbox',\n      'limit',\n      'proximity',\n      'countries',\n      'types',\n      'language',\n      'reverseMode',\n      'mode',\n      'autocomplete',\n      'fuzzyMatch',\n      'routing',\n      'worldview'\n    ];\n    const spacesOrCommaRgx = /[\\s,]+/;\n\n    var self = this;\n    var config = keys.reduce(function(config, key) {\n      // don't include undefined/null params, but allow boolean, among other, values\n      if (self.options[key] === undefined || self.options[key] === null) {\n        return config;\n      }\n\n      // countries, types, and language need to be passed in as arrays to client\n      // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n      ['countries', 'types', 'language'].indexOf(key) > -1\n        ? (config[key] = self.options[key].split(spacesOrCommaRgx))\n        : (config[key] = self.options[key]);\n\n      const isCoordKey =\n        typeof self.options[key].longitude === 'number' &&\n        typeof self.options[key].latitude  === 'number';\n\n      if (key === 'proximity' && isCoordKey) {\n        const lng = self.options[key].longitude;\n        const lat = self.options[key].latitude;\n\n        config[key] = [lng, lat];\n      }\n\n      return config;\n    }, {});\n\n    switch (requestType) {\n    case GEOCODE_REQUEST_TYPE.REVERSE: {\n      var coords = search.split(spacesOrCommaRgx).map(function(c) {\n        return parseFloat(c, 10);\n      })\n      if (!self.options.flipCoordinates) {\n        coords.reverse();\n      }\n\n      // client only accepts one type for reverseGeocode, so\n      // use first config type if one, if not default to poi\n      config.types ? [config.types[0]] : [\"poi\"];\n      config = extend(config, { query: coords, limit: 1 });\n\n      // Remove config options not supported by the reverseGeocoder\n      ['proximity', 'autocomplete', 'fuzzyMatch', 'bbox'].forEach(function(key) {\n        if (key in config) {\n          delete config[key]\n        }\n      });\n    } break;\n    case GEOCODE_REQUEST_TYPE.FORWARD: {\n      // Ensure that any reverse geocoding looking request is cleaned up\n      // to be processed as only a forward geocoding request by the server.\n      const trimmedSearch = search.trim();\n      const reverseGeocodeCoordRgx = /^(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)?$/;\n      if (reverseGeocodeCoordRgx.test(trimmedSearch)) {\n        search = search.replace(/,/g, ' ');\n      }\n      config = extend(config, { query: search });\n    } break;\n    }\n\n    return config;\n  },\n\n  _geocode: function(searchInput) {\n    this.inputString = searchInput;\n    this._showLoadingIcon();\n    this._eventEmitter.emit('loading', { query: searchInput });\n\n    const requestType = this._requestType(this.options, searchInput);\n    const config = this._setupConfig(requestType, searchInput);\n\n    var request;\n    switch (requestType) {\n    case GEOCODE_REQUEST_TYPE.LOCAL:\n      request = Promise.resolve();\n      break;\n    case GEOCODE_REQUEST_TYPE.FORWARD:\n      request = this.geocoderService.forwardGeocode(config).send();\n      break;\n    case GEOCODE_REQUEST_TYPE.REVERSE:\n      request = this.geocoderService.reverseGeocode(config).send();\n      break;\n    }\n\n    var localGeocoderRes = this.options.localGeocoder ? this.options.localGeocoder(searchInput) || [] : [];\n    var externalGeocoderRes = [];\n\n    var geocoderError = null;\n    request.catch(function(error) {\n      geocoderError = error;\n    }.bind(this))\n      .then(\n        function(response) {\n          this._hideLoadingIcon();\n\n          var res = {};\n\n          if (!response){\n            res = {\n              type: 'FeatureCollection',\n              features: []\n            }\n          } else if (response.statusCode == '200') {\n            res = response.body;\n            res.request = response.request\n            res.headers = response.headers\n          }\n\n          res.config = config;\n\n          if (this.fresh){\n            this.eventManager.start(this);\n            this.fresh = false;\n          }\n\n          // supplement Mapbox Geocoding API results with locally populated results\n          res.features = res.features\n            ? localGeocoderRes.concat(res.features)\n            : localGeocoderRes;\n\n          if (this.options.externalGeocoder) {\n\n            externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || Promise.resolve([]);\n            // supplement Mapbox Geocoding API results with features returned by a promise\n            return externalGeocoderRes.then(function(features) {\n              res.features = res.features ? features.concat(res.features) : features;\n              return res;\n            }, function(){\n              // on error, display the original result\n              return res;\n            });\n          }\n          return res;\n\n        }.bind(this)).then(\n        function(res) {\n          if (geocoderError) {\n            throw geocoderError;\n          }\n\n          // apply results filter if provided\n          if (this.options.filter && res.features.length) {\n            res.features = res.features.filter(this.options.filter);\n          }\n\n          if (res.features.length) {\n            this._showClearButton();\n            this._hideGeolocateButton();\n            this._showAttribution();\n            this._eventEmitter.emit('results', res);\n            this._typeahead.update(res.features);\n          } else {\n            this._hideClearButton();\n            this._hideAttribution();\n            this._typeahead.selected = null;\n            this._renderNoResults();\n            this._eventEmitter.emit('results', res);\n          }\n\n        }.bind(this)\n      ).catch(\n        function(err) {\n          this._hideLoadingIcon();\n          this._hideAttribution();\n\n          // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n          if ((localGeocoderRes.length && this.options.localGeocoder) || (externalGeocoderRes.length && this.options.externalGeocoder) ) {\n            this._showClearButton();\n            this._hideGeolocateButton();\n            this._typeahead.update(localGeocoderRes);\n          } else {\n            this._hideClearButton();\n            this._typeahead.selected = null;\n            this._renderError();\n          }\n\n          this._eventEmitter.emit('results', { features: localGeocoderRes });\n          this._eventEmitter.emit('error', { error: err });\n        }.bind(this)\n      );\n\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function(ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._hideClearButton();\n    this._showGeolocateButton();\n    this._removeMarker();\n    this.lastSelected = null;\n    this._eventEmitter.emit('clear');\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function(ev) {\n    this._clear(ev);\n    this._inputEl.focus();\n  },\n\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function(ev) {\n    var ctx = this;\n\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n\n  _onQueryResult: function(response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function() {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map || !this.options.trackProximity){\n      return;\n    }\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat }, false);\n    } else {\n      this.setProximity(null, false);\n    }\n  },\n\n  _collapse: function() {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  _unCollapse: function() {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function(searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  _renderError: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderLocationError: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>A location error has occurred</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderNoResults: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n    this._renderMessage(errorMessage);\n  },\n\n  _renderUserDeniedGeolocationError: function() {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>Geolocation permission denied</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderMessage: function(msg){\n    this._typeahead.update([]);\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function(){\n    if (this.options.placeholder) return this.options.placeholder;\n    if (this.options.language){\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue)  return localizedValue;\n    }\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function(searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    if (searchInput.length >= this.options.minLength) {\n      this._geocode(searchInput);\n    }\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object|'ip'} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties or the string 'ip'.\n   * @param {Boolean} disableTrackProximity If true, sets `trackProximity` to false. True by default to prevent `trackProximity` from unintentionally overriding an explicitly set proximity value.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function(proximity, disableTrackProximity = true) {\n    this.options.proximity = proximity;\n    if (disableTrackProximity) {\n      this.options.trackProximity = false;\n    }\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function() {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function(fn){\n    if (fn && typeof(fn) == \"function\"){\n      this._typeahead.render = fn;\n    }\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function(){\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function(language){\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function(){\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function(){\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function(zoom){\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function(){\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function(flyTo){\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function(){\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function(placeholder){\n    this.placeholder = (placeholder) ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n    this._inputEl.setAttribute('aria-label', this.placeholder);\n    return this\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function(){\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function(bbox){\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function(){\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function(countries){\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function(){\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function(types){\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function(){\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function(minLength){\n    this.options.minLength = minLength;\n    if (this._typeahead)  this._typeahead.options.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function(){\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function(limit){\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function(){\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function(filter){\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function(origin){\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(\n      MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      })\n    );\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function(){\n    return this.options.origin;\n  },\n\n  /**\n   * Set the accessToken option used for the geocoding request endpoint.\n   * @param {String} accessToken value\n   * @returns {MapboxGeocoder} this\n   */\n  setAccessToken: function(accessToken){\n    this.options.accessToken = accessToken;\n    this.geocoderService = mbxGeocoder(\n      MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      })\n    );\n    return this;\n  },\n\n  /**\n   * Set the autocomplete option used for geocoding requests\n   * @param {Boolean} value The boolean value to set autocomplete to\n   * @returns\n   */\n  setAutocomplete: function(value){\n    this.options.autocomplete = value;\n    return this;\n  },\n\n  /**\n   * Get the current autocomplete parameter value used for requests\n   * @returns {Boolean} The autocomplete parameter value\n   */\n  getAutocomplete: function(){\n    return this.options.autocomplete\n  },\n\n  /**\n   * Set the fuzzyMatch option used for approximate matching in geocoding requests\n   * @param {Boolean} value The boolean value to set fuzzyMatch to\n   * @returns\n   */\n  setFuzzyMatch: function(value){\n    this.options.fuzzyMatch = value;\n    return this;\n  },\n\n  /**\n   * Get the current fuzzyMatch parameter value used for requests\n   * @returns {Boolean} The fuzzyMatch parameter value\n   */\n  getFuzzyMatch: function(){\n    return this.options.fuzzyMatch\n  },\n\n  /**\n   * Set the routing parameter used to ask for routable point metadata in geocoding requests\n   * @param {Boolean} value The boolean value to set routing to\n   * @returns\n   */\n  setRouting: function(value){\n    this.options.routing = value;\n    return this;\n  },\n\n  /**\n   * Get the current routing parameter value used for requests\n   * @returns {Boolean} The routing parameter value\n   */\n  getRouting: function(){\n    return this.options.routing\n  },\n\n  /**\n   * Set the worldview parameter\n   * @param {String} code The country code representing the worldview (e.g. \"us\" | \"cn\" | \"jp\", \"in\")\n   * @returns\n   */\n  setWorldview: function(code){\n    this.options.worldview = code;\n    return this;\n  },\n\n  /**\n   * Get the current worldview parameter value used for requests\n   * @returns {String} The worldview parameter value\n   */\n  getWorldview: function(){\n    return this.options.worldview\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function(selected){\n    // clean up any old marker that might be present\n    if (!this._map){\n      return;\n    }\n    this._removeMarker();\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    }\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker)\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n    if (selected.center) {\n      this.mapMarker\n        .setLngLat(selected.center)\n        .addTo(this._map);\n    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n      this.mapMarker\n        .setLngLat(selected.geometry.coordinates)\n        .addTo(this._map);\n    }\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function(){\n    if (this.mapMarker){\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function(type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function(type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    this.eventManager.remove();\n    return this;\n  }\n};\n\nmodule.exports = MapboxGeocoder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}